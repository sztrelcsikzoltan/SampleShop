@model SampleShop.Core.ViewModels.ProductManagerViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Update</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Product.Id)

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2 fw-bold mt-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2 fw-bold mt-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2 fw-bold mt-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control mb-1" } })
                @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Product.Category, htmlAttributes: new { @class = "control-label col-md-2 fw-bold" })
            <div class="col-md-9">
                @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })*@
                @Html.DropDownListFor(model => model.Product.Category, new SelectList(Model.ProductCategories, "Category", "Category"), new { htmlAttributes = new { @class = "form-control" } })

            </div>
        </div>

        <div class="form-group row mb-3">
            @Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label col-md-2 fw-bold mt-2" })
            <div class="col-md-9">
                @Html.EditorFor(model => model.Product.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="offset-md-2 col-md-9">
                <input type="submit" value="Save" class="btn btn-info" />
            </div>
        </div>
    </div>
}

<div class="mt-2">
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
